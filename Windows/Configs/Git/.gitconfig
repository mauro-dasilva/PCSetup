[core]
  editor = code --wait
[diff]
  tool = vscode
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[merge]
  tool = vscode
[mergetool "vscode"]
  cmd = code --wait $MERGED

[user]
	name = Mauro Da Silva
	email = "mauro.dasilva@outlook.com"
	
[alias]	
	s = status
    co = checkout
	cbare = clone --bare
    ec = config --global -e
	rh = reset --hard
    up = !git pull --prune $@ && git submodule update --init --recursive
	cob = checkout -b
	cobp = !git checkout -b $1 && git push -u origin
	cm = !git add -A && git commit -m
	cmp = "!f() { git add -A && git commit -m \"$@\" && git push; }; f"
	com = !git co main && git up
	fpush = !git push --force-with-lease origin $(git branch | grep \\* | cut -d ' ' -f2)
    save = !git add -A && git commit -m 'Savepoint'
    undo = reset HEAD~1 --mixed
    amend = commit -a --amend
	siu = stash --include-untracked
    wipe = !git add -A && git commit -qm 'Wipe Savepoint' && git reset HEAD~1 --hard

	default = !git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'
	bclean = "!f() { DEFAULT=$(git default); git branch --merged ${1-$DEFAULT} | grep -v " ${1-$DEFAULT}$" | xargs -r git branch -d; }; f"
  	bdone = "!f() { DEFAULT=$(git default); git checkout ${1-$DEFAULT} && git up && git bclean ${1-$DEFAULT}; }; f"
    sync = !git up && git push
	mi = "!f(){ git rebase -i HEAD~\"$1\"; };f"
	rbm = !git fetch && git rebase --interactive origin/main
	
	wt = worktree
	wtl = worktree list
	wta = "!f() { git worktree add \".worktrees/$1\"; git push -u origin $(git branch --show-current); }; f"	
	wtr = "!f() { git up && git branch --merged | grep '^\\+' | egrep -v '(^\\*|master|develop|main)' | tr -d '+' | xargs -r git worktree remove ; }; f"
	wtco = "!f() { git worktree add ./worktrees/$1 $1; }; f"	
	
	sweep = "!git wtr && git br" # Remove all Worktrees and Branches that have been merged
		
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	grep = grep -Ii
	find = "!git ls-files | grep -i"
	lt = describe --tags --abbrev=0
	la = "!git config -l | grep alias | cut -c 7-"
		
    mt = mergetool
	dt = difftool
	lf = log --name-status
	cleanup = clean -fdx
	
[color "status"]		
	changed = blue normal bold
	added = green normal bold
	untracked = red normal bold
	modified = blue normal bold
[credential]
	helper = wincred
[core]
	editor = code --wait	
	longpaths = true
[advice]
	statusHints = false
[push]
	default = simple
[winUpdater]
	recentlySeenVersion = 2.23.0.windows.1
[pack]
	useSparse = true
